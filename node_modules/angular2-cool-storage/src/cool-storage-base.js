"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var rxjs_1 = require("rxjs");
var CoolStorageBase = (function () {
    function CoolStorageBase(storageObject, storageObjectName) {
        if (!storageObject) {
            throw new Error("Current browser does not support " + storageObjectName);
        }
        this._storageObject = storageObject;
        this._itemSetSubject = new rxjs_1.Subject();
        this._itemRemovedSubject = new rxjs_1.Subject();
    }
    Object.defineProperty(CoolStorageBase.prototype, "itemSetObservable", {
        get: function () {
            return this._itemSetSubject.asObservable();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CoolStorageBase.prototype, "itemRemovedObservable", {
        get: function () {
            return this._itemRemovedSubject.asObservable();
        },
        enumerable: true,
        configurable: true
    });
    CoolStorageBase.prototype.getItem = function (key) {
        return this._storageObject.getItem(key) || null;
    };
    CoolStorageBase.prototype.setItem = function (key, value) {
        this._itemSetSubject.next({
            key: key,
            value: value
        });
        this._setItemInStorage(key, value);
    };
    CoolStorageBase.prototype.removeItem = function (key) {
        var currentValue = this.tryGetObject(key);
        if (!currentValue) {
            currentValue = this.getItem(key);
        }
        this._itemRemovedSubject.next({
            key: key,
            value: currentValue
        });
        this._storageObject.removeItem(key);
    };
    CoolStorageBase.prototype.key = function (index) {
        return this._storageObject.key(index);
    };
    CoolStorageBase.prototype.clear = function () {
        this._storageObject.clear();
    };
    Object.defineProperty(CoolStorageBase.prototype, "length", {
        get: function () {
            return this._storageObject.length;
        },
        enumerable: true,
        configurable: true
    });
    CoolStorageBase.prototype.getObject = function (key) {
        var jsonInStorage = this.getItem(key);
        if (jsonInStorage === null) {
            return null;
        }
        return JSON.parse(jsonInStorage);
    };
    CoolStorageBase.prototype.tryGetObject = function (key) {
        try {
            return this.getObject(key);
        }
        catch (e) {
            return null;
        }
    };
    CoolStorageBase.prototype.setObject = function (key, value) {
        this._itemSetSubject.next({
            key: key,
            value: value
        });
        this._setItemInStorage(key, JSON.stringify(value));
    };
    CoolStorageBase.prototype._setItemInStorage = function (key, value) {
        this._storageObject.setItem(key, value);
    };
    return CoolStorageBase;
}());
exports.CoolStorageBase = CoolStorageBase;
//# sourceMappingURL=cool-storage-base.js.map